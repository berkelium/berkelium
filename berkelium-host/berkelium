#!/bin/sh

base=`dirname $(readlink -f "$0")`
base=`readlink -f "$base/../chromium/src/out/"`

[ -e ~/.berkeliumrc ] && . ~/.berkeliumrc

if [ -z "$BERKELIUM_TYPE" ]; then
	if [ -e $dir/Debug -a -e $dir/Release ]; then
		echo "Error: berkelium debug and release found!"
		echo "Add BERKELIUM_TYPE=Debug or BERKELIUM_TYPE=Release to ~/.berkeliumrc"
		exit 1
	fi
fi

base="$base/$BERKELIUM_TYPE"

cd $base

function update_ld_path()
{
export LD_LIBRARY_PATH="$base/lib.target"
}

function berkelium_default()
{
update_ld_path
./berkelium $*
}

function berkelium_debug_gdb()
{
update_ld_path
gdb --args ./berkelium $*
}

function berkelium_debug_external()
{
echo waiting for external debugger
echo $* > ~/.berkelium-debug
while [ -e ~/.berkelium-debug ]; do
	sleep 3
done
exit 0
}

function fake()
{
gdb --args $dir/../build/run/host-fake $*
}

#
# You can create an ~/.berkeliumrc with this content:
#
# BERKELIUM_DEBUG="gdb"
#  to debug berkelium hots with gdb on command line
#
# BERKELIUM_DEBUG="external"
#  to debug berkelium host with eclipse
#  Pass --berkelium-debug=<home>/.berkelium-debug to berkelium-host
#


if [ "$1" = "debug" ]; then
	berkelium_debug_gdb `cat ~/.berkelium-debug`
	rm ~/.berkelium-debug
	exit 0
fi

if [ "$1" = "debug-fake" ]; then
	fake --berkelium-debug=`echo ~/.berkelium-debug`
	rm ~/.berkelium-debug
	exit 0
fi

if [ "$BERKELIUM_DEBUG" = "gdb" ]; then
	berkelium_debug_gdb $*
	exit 0
fi

if [ "$BERKELIUM_DEBUG" = "external" ]; then
	berkelium_debug_external $*
	exit 0
fi


berkelium_default $*
